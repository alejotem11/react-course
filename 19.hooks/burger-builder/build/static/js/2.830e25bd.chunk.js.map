{"version":3,"sources":["components/Order/Order.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","classes","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","orders","Spinner","loading","Order_Order","id","React","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,iKCkCHC,EA/BD,SAAAC,GACZ,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GAAE,OACzCC,EAAAC,EAAAC,cAAA,QACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKV,EAAGJ,MACPI,EAAGJ,KATN,KAScI,EAAGH,OATjB,OAaF,OACEI,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQtB,OACtBW,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAaU,OAAOC,WAAWtB,EAAMuB,OAAOC,QAAQ,uBCrB9DC,8LA4BFC,KAAK1B,MAAM2B,cAAcD,KAAK1B,MAAM4B,wCAIpC,IAAIC,EAASpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,MASb,OARKJ,KAAK1B,MAAM+B,UACdF,EAASH,KAAK1B,MAAM6B,OAAOtB,IAAI,SAAAR,GAAK,OAClCU,EAAAC,EAAAC,cAACqB,EAAD,CACEd,IAAKnB,EAAMkC,GACXhC,YAAaF,EAAME,YACnBsB,MAAOxB,EAAMwB,WAIjBd,EAAAC,EAAAC,cAAA,WACGkB,UA3CYK,IAAMC,WA+DZC,sBAdS,SAAAC,GACtB,MAAO,CACLR,OAAQQ,EAAMtC,MAAM8B,OACpBE,QAASM,EAAMtC,MAAMgC,QACrBH,MAAOS,EAAMC,KAAKV,QAIK,SAAAW,GACzB,MAAO,CACLZ,cAAe,SAACC,GAAD,OAAWW,EAASC,IAAoBZ,OAI5CQ,CAA6CK,YAAiBhB,EAAQiB","file":"static/js/2.830e25bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__W-Npf\"};","import React from 'react';\r\n\r\nimport classes from './Order.css';\r\n\r\nconst order = props => {\r\n  const ingredients = [];\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName]\r\n    });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map(ig => (\r\n    <span\r\n      style={{\r\n        textTransform: 'capitalize',\r\n        display: 'inline-block',\r\n        margin: '0 8px',\r\n        border: '1px solid #ccc',\r\n        padding: '5px'\r\n      }}\r\n      key={ig.name}>\r\n      {ig.name} ({ig.amount})\r\n    </span>\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport Order from '../../components/Order/Order';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Orders extends React.Component {\r\n  // We now manage the state with Redux\r\n  // state = {\r\n  //   orders: [],\r\n  //   loading: true\r\n  // }\r\n\r\n  // ************* Without Redux **********************\r\n  /* async componentDidMount () {\r\n    try {\r\n      const res = await axios.get('/orders.json');\r\n      const fetchedOrders = [];\r\n      // console.log(response.data);\r\n      for (let key in res.data) {\r\n        fetchedOrders.push({\r\n          ...res.data[key],\r\n          id: key\r\n        });\r\n      }\r\n      this.setState({ orders: fetchedOrders });\r\n    } catch (error) {\r\n      console.log('Something went wrong');\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  } */\r\n\r\n  componentDidMount () {\r\n    this.props.onFetchOrders(this.props.token);\r\n  }\r\n\r\n  render () {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      orders = this.props.orders.map(order => (\r\n        <Order\r\n          key={order.id}\r\n          ingredients={order.ingredients}\r\n          price={order.price} />\r\n      ));\r\n    }\r\n    return (\r\n      <div>\r\n        {orders}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders: (token) => dispatch(actions.fetchOrders(token))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}